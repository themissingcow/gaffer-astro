import Gaffer
import GafferAstro
import GafferUI

import functools
import weakref

Gaffer.Metadata.registerNode(

	GafferAstro.MultiStarnet,

	plugs = {

		"in" : [
			'nodule:type', 'GafferUI::StandardNodule',
			'description', 'The input image',
			'plugValueWidget:type', '',
			'noduleLayout:spacing', 2.0,
		],

		"out" : [
			'nodule:type', 'GafferUI::StandardNodule',
			'description', 'The output image generated by this node.',
		],

		"fileName" : [

			"description",
			"""
			""",

			"plugValueWidget:type", "GafferUI.FileSystemPathPlugValueWidget",
			"path:leaf", True,
			"path:bookmarks", "image",
			"fileSystemPath:extensions", "tif",
			"fileSystemPath:extensionsLabel", "Show only image files",
			"fileSystemPath:includeSequences", False,

		]

	}
)


def __addRow( weakNode, source = None ) :

	if weakNode() is None :
		return

	rowsPlug = weakNode()["rows"]

	with Gaffer.UndoScope( rowsPlug.ancestor( Gaffer.ScriptNode ) ) :

		row = rowsPlug.addRow()

		if source :
			row["cells"]["source"]["value"].setValue( source )
			lastDot = source.rfind( "." )
			if lastDot != -1 :
				row["name"].setValue( "%s.starnet" % source[ : lastDot ] )

def __existingRows( rowsPlug ) :

	rows = []

	for r in rowsPlug.children() :
		if not r.isSame( rowsPlug.defaultRow() ) :
			rows.append( r["cells"]["source"]["value"].getValue() )

	return rows

def __addRowButtonMenuDefinition( menuDefinition, widget ) :

	node = widget.getPlug().node()

	if not isinstance( node, GafferAstro.MultiStarnet ) :
		return

	weakNode = weakref.ref( node )

	menuDefinition.append( "/Empty", { "command" : functools.partial( __addRow, weakNode ) } )

	with widget.ancestor( GafferUI.NodeEditor ).getContext() :
		existingRows = __existingRows( node["rows"] )
		channels = node["in"].channelNames()

	if not channels :
		return

	menuDefinition.append( "/EmptyDivider", { "divider" : True, "label" : "Channels" } )

	for c in channels :
		menuDefinition.append( "/%s" % c.replace( ".", "/" ) , {
			"command" : functools.partial( __addRow, weakNode, c ),
			"active" : c not in existingRows
		} )

GafferUI.SpreadsheetUI.addRowButtonMenuSignal().connect( __addRowButtonMenuDefinition, scoped = False )
