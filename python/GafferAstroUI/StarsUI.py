import imath
import IECore
import Gaffer
import GafferAstro

Gaffer.Metadata.registerNode(

	GafferAstro.Stars,

	'noduleLayout:customGadget:addButtonTop:visible', False,
	'noduleLayout:customGadget:addButtonBottom:visible', False,
	'noduleLayout:customGadget:addButtonLeft:visible', False,
	'noduleLayout:customGadget:addButtonRight:visible', False,
	'uiEditor:emptySections', IECore.StringVectorData( [  ] ),
	'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ),
	plugs = {
	
		"in" : [
			'nodule:type', 'GafferUI::StandardNodule',
			'description', 'The input image',
			'plugValueWidget:type', '',
			'noduleLayout:spacing', 2.0,
			'layout:section', 'Settings',
			'layout:index', 0,
		],
		
		"out" : [
			'nodule:type', 'GafferUI::StandardNodule',
			'description', 'The output image generated by this node.',
			'layout:section', 'Settings',
			'layout:index', 1,
		],
		
		"enabled" : [
			'layout:section', 'Node',
			'layout:index', 9,
		],
		
		"source" : [
			'nodule:type', '',
			'layout:section', 'Settings',
			'layout:index', 2,
		],
		
		"switchIndex" : [
			'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.',
			'nodule:type', '',
			'layout:section', 'Settings',
			'layout:index', 3,
			'label', 'Show',
			'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget',
			'preset:Output', 0,
			'preset:Stars', 1,
		],
		
		"blackPoint" : [
			'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ),
			'layout:section', 'Settings',
			'layout:index', 4,
			'nodule:type', '',
		],
		
		"whitePoint" : [
			'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ),
			'layout:section', 'Settings',
			'layout:index', 5,
			'nodule:type', '',
		],
		
		"multiply" : [
			'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ),
			'layout:section', 'Settings',
			'layout:index', 6,
			'nodule:type', '',
		],
		
		"gamma" : [
			'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ),
			'layout:section', 'Settings',
			'layout:index', 7,
			'nodule:type', '',
		],
		
		"whiteClamp" : [
			'nodule:type', '',
			'description', "Clamps output values so they don't go above 1.",
			'layout:section', 'Settings',
			'layout:index', 8,
		],
		
	}
	

)
